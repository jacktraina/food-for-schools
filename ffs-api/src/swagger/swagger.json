{
  "openapi": "3.0.0",
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "info": {
    "title": "User API",
    "version": "1.0.0",
    "description": "API for user authentication, creation, and management of schools, districts, bids, and tasks"
  },
  "paths": {
    "/api/usda-news": {
      "get": {
        "summary": "Get USDA news feed",
        "description": "Retrieve the latest news articles from the USDA Food and Nutrition Service newsroom RSS feed for display on the dashboard.",
        "tags": ["News"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "USDA news articles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USDANewsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Failed to fetch USDA news",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "array",
                      "items": {},
                      "example": []
                    },
                    "count": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "summary": "Get dashboard metrics",
        "description": "Retrieve dashboard metrics and statistics for the authenticated user, including total bids, active bids, districts, schools, users, and recent activity.",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard metrics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardMetricsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Check system health",
        "description": "Check the health status of the system and its dependencies, such as the database.",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "503": {
            "description": "System is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/schools/detailed/{districtId}": {
      "get": {
        "summary": "Get detailed schools by district ID",
        "description": "Retrieve detailed information about all schools in a specific district, including shipping addresses and contact information for display on the District Details page.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "The ID of the district to retrieve schools for",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schools retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSchoolsDetailedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access this district",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schools/{districtId}": {
      "post": {
        "summary": "Create a school",
        "description": "Create a new school within a specified district.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district where the school will be created",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchoolRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "School created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSchoolResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get schools by district ID",
        "description": "Retrieve all schools belonging to a specific district identified by its ID.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district to retrieve schools from",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of schools in the district",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolResponseItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schools/{districtId}/{id}/archive": {
      "put": {
        "summary": "Archive a school",
        "description": "Archive an existing school within a district, marking it as inactive.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district the school belongs to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the school to archive",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School archived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid IDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schools/{districtId}/{id}/activate": {
      "put": {
        "summary": "Activate a school",
        "description": "Activate an existing school within a district, marking it as active.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district the school belongs to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the school to activate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid IDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/schools/{districtId}/{schoolId}/details": {
      "get": {
        "summary": "Get comprehensive school details",
        "description": "Retrieve comprehensive information about a specific school including district name, contact details, and billing information.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "schoolId", 
            "in": "path",
            "required": true,
            "description": "Unique identifier of the school",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSchoolDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID or school ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/schools/{districtId}/{id}": {
      "get": {
        "summary": "Get school details by ID",
        "description": "Retrieve detailed information about a specific school within a district by its ID.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "The ID of the district containing the school",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "description": "The ID of the school to retrieve",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSchoolByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid district ID or school ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found - School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a school",
        "description": "Update an existing school's details within a district.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district the school belongs to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the school to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchoolRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "School updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSchoolResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid IDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Soft delete a school",
        "description": "Soft delete a school with the specified ID within a district.",
        "tags": ["Schools"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district the school belongs to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the school to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "School or district not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate a user with email and password to obtain an access token.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/reset-password": {
      "post": {
        "summary": "Reset user password",
        "description": "Reset a user's password using a reset code sent via email.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid reset code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/request-password-reset-code": {
      "post": {
        "summary": "Request password reset code",
        "description": "Request a password reset code to be sent to the user's email.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/request-email-verification-code": {
      "post": {
        "summary": "Request email verification code",
        "description": "Request an email verification code to be sent to the user's email.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify-email": {
      "post": {
        "summary": "Verify user email",
        "description": "Verify a user's email address using a verification code.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid verification code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/invite": {
      "post": {
        "summary": "Invite a new user to the platform",
        "description": "Invite a new user to the platform with specified role and optional district/school assignments.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string",
                    "description": "Full name of the user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["Super-Admin", "Group Admin", "District Admin", "School Admin", "Viewer"],
                    "description": "User's role"
                  },
                  "bid_role": {
                    "type": "string",
                    "enum": ["Bid Administrator", "Bid Viewer"],
                    "description": "User's bid-related role"
                  },
                  "district_id": {
                    "type": "integer",
                    "description": "ID of the district to associate with the user"
                  },
                  "school_id": {
                    "type": "integer",
                    "description": "ID of the school to associate with the user"
                  }
                },
                "required": ["full_name", "email", "role"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User invitation sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/bulk-upload": {
      "post": {
        "summary": "Upload CSV for bulk user invitations",
        "description": "Upload a CSV file to invite multiple users to the platform.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "CSV file containing user invitation data"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bulk upload initiated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid CSV format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/bulk-upload/template": {
      "get": {
        "summary": "Download CSV template for bulk user upload",
        "description": "Download a CSV template for bulk user invitations.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "CSV template retrieved successfully",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bid-categories": {
      "get": {
        "summary": "Get list of all bid categories",
        "description": "Retrieve a list of all bid categories available in the system, used for category selection in the create bid modal.",
        "tags": ["Bid Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of bid categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListCategoriesResponseItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bid category",
        "description": "Create a new bid category with name and description.",
        "tags": ["Bid Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bid-categories/{id}": {
      "get": {
        "summary": "Get a bid category by ID",
        "description": "Retrieve a specific bid category by its ID for editing purposes.",
        "tags": ["Bid Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the category to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid category ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a bid category",
        "description": "Update an existing bid category's name and description.",
        "tags": ["Bid Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the category to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a bid category",
        "description": "Delete an existing bid category by ID.",
        "tags": ["Bid Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the category to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get list of all users",
        "description": "Retrieve a list of all users in the system. Accessible only by Super-Admin, Group Admin, and District Admin roles.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListUsersResponseItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "summary": "Search and filter users",
        "description": "Search users by name, email, or role type and filter by role, bidRole, status, and district. Accessible only by Super-Admin, Group Admin, and District Admin roles.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term to match against user name, email, or role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter by user role (App roles)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Super-Admin", "Group Admin", "District Admin", "School Admin", "Viewer"]
            }
          },
          {
            "name": "bidRole",
            "in": "query",
            "description": "Filter by bid role",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Bid Administrator", "Bid Viewer"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by user status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "in": "query",
            "description": "Filter by district ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListUsersResponseItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user details by ID",
        "description": "Retrieve detailed information about a specific user by their ID. Returns comprehensive user data including roles, bid roles, and managed bids. Accessible only by Super-Admin, Group Admin, and District Admin roles.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse_User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/eligible-bid-managers": {
      "get": {
        "summary": "Get list of eligible bid managers",
        "description": "Retrieve a list of users who are eligible to be bid managers. Returns users with BID category roles or ADMIN roles with bid management capabilities (Group Admin, District Admin, School Admin). Accessible only by Super-Admin, Group Admin, and District Admin roles.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of eligible bid managers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListUsersResponseItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to view eligible bid managers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "summary": "Get tasks assigned to authenticated user",
        "description": "Retrieve a list of tasks assigned to the authenticated user.",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks assigned to the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "description": "Create a new task with title, due date, assigned user, and completion status.",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "patch": {
        "summary": "Update a task",
        "description": "Update selected fields of an existing task, supporting partial updates for title, due date, assigned user, and completion status.",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the task to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid task ID or request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete a task with the specified ID. User can only delete tasks they own.",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the task to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully (No Content)"
          },
          "400": {
            "description": "Invalid task ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not own this task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/district": {
      "post": {
        "summary": "Create a district",
        "description": "Create a new district with associated products.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDistrictRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "District created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDistrictResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get list of districts for authenticated user's cooperative",
        "description": "Retrieve all districts assigned to the authenticated user's cooperative. User must be associated with a cooperative.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of districts assigned to the user's cooperative",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDistrictListResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - User is not associated with a cooperative",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions (requires Group Admin role)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/district/{id}": {
      "get": {
        "summary": "Get district details",
        "description": "Retrieve detailed information about a specific district by its ID.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "District details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDistrictDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update district details",
        "description": "Update selected fields of an existing district, such as address, contact info, enrollment, and associated products.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDistrictRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "District updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDistrictResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID or request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Soft delete a district",
        "description": "Soft delete a district with the specified ID. User can only delete districts they own.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "District deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/district/{id}/deactivate": {
      "put": {
        "summary": "Deactivate district",
        "description": "Deactivate a district by ID, marking it as inactive and preventing further modifications.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district to deactivate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "District deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeactivateDistrictResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/district/{id}/activate": {
      "put": {
        "summary": "Activate district",
        "description": "Activate a district by ID, marking it as active and allowing further modifications.",
        "tags": ["Districts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district to activate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "District activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateDistrictResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "District not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/invite": {
      "post": {
        "summary": "Invite a new organization",
        "description": "Invite a new organization to the platform with specified type and name.",
        "tags": ["Organizations"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the organization invitation"
                  },
                  "organization_type": {
                    "type": "string",
                    "enum": ["Coop", "Single-District"],
                    "description": "Type of organization"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the organization"
                  }
                },
                "required": ["email", "organization_type", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization invitation sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Super-Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/invite/accept": {
      "post": {
        "summary": "Accept an organization invitation and register user",
        "description": "Accept an organization invitation and register a new user with the provided details.",
        "tags": ["Organizations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "User's password"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name"
                  },
                  "token": {
                    "type": "string",
                    "description": "Invitation token"
                  }
                },
                "required": ["email", "password", "first_name", "last_name", "token"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization invitation accepted and user successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "user_id": {
                      "type": "integer",
                      "description": "ID of the registered user"
                    },
                    "organization_id": {
                      "type": "integer",
                      "description": "ID of the organization"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token, or invalid email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{id}": {
      "put": {
        "summary": "Update organization",
        "description": "Update an organization's details, such as address, phone, or email.",
        "tags": ["Organizations"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the organization to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid organization ID or request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids": {
      "get": {
        "summary": "Get list of all bids",
        "description": "Retrieve a list of all bids in the system with mapped response format for frontend compatibility.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of bids",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bid",
        "description": "Create a new bid with the provided details.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBidRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bid created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBidResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids/paginated": {
      "get": {
        "summary": "Get paginated list of bids with search and filtering",
        "description": "Retrieve a paginated list of bids with support for search, filtering by year/status/award type, and organization-specific filtering.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination (default: 1)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of items per page (default: 10, max: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search term to filter bids by ID, name, or bid manager name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bidYear",
            "in": "query",
            "required": false,
            "description": "Filter bids by year",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter bids by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "awardType",
            "in": "query",
            "required": false,
            "description": "Filter bids by award type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "myBids",
            "in": "query",
            "required": false,
            "description": "Filter to show only bids managed by the authenticated user",
            "schema": {
              "type": "string",
              "enum": ["true", "false"]
            }
          },
          {
            "name": "districtId",
            "in": "query",
            "required": false,
            "description": "Filter bids by district ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cooperativeId",
            "in": "query",
            "required": false,
            "description": "Filter bids by cooperative ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of bids",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBidsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids/{id}": {
      "get": {
        "summary": "Get bid by ID",
        "description": "Retrieve a specific bid by its ID.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BidDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bid ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a bid",
        "description": "Update selected fields of an existing bid.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bid updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BidResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bid ID or request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a bid",
        "description": "Delete a bid with the specified ID.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bid deleted successfully (No Content)"
          },
          "400": {
            "description": "Invalid bid ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids/manager/{bidManagerId}": {
      "get": {
        "summary": "Get bids for bid manager",
        "description": "Retrieve all bids managed by a specific bid manager.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bidManagerId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid manager",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of bids for the bid manager",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidListItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid bid manager ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids/district/{districtId}": {
      "get": {
        "summary": "Get bids for district",
        "description": "Retrieve all bids associated with a specific district.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the district",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of bids for the district",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidListItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid district ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bids/cooperative/{cooperativeId}": {
      "get": {
        "summary": "Get bids for cooperative",
        "description": "Retrieve all bids associated with a specific cooperative.",
        "tags": ["Bids"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "cooperativeId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the cooperative",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of bids for the cooperative",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidListItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid cooperative ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bid-items": {
      "get": {
        "summary": "Get all bid items",
        "description": "Retrieve a list of all bid items in the system.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of bid items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidItemResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bid item",
        "description": "Create a new bid item with the specified details.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBidItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bid item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BidItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bid-items/bid/{bidId}": {
      "get": {
        "summary": "Get bid items by bid ID",
        "description": "Retrieve all bid items associated with a specific bid.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bidId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid to retrieve items for",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of bid items for the specified bid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidItemResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid bid ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bid-items/{id}": {
      "get": {
        "summary": "Get bid item by ID",
        "description": "Retrieve a specific bid item by its unique identifier.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid item to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid item details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BidItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bid item ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a bid item",
        "description": "Update selected fields of an existing bid item, supporting partial updates for item details, projections, and other properties.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid item to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBidItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bid item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BidItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or bid item ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete bid item by ID",
        "description": "Soft delete a specific bid item by its unique identifier. This operation marks the bid item as deleted without permanently removing it from the database.",
        "tags": ["Bid Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the bid item to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bid item deleted successfully"
          },
          "400": {
            "description": "Invalid bid item ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/{id}/deactivate": {
      "put": {
        "summary": "Deactivate user",
        "description": "Deactivate a user by ID, marking them as inactive and preventing login.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user to deactivate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeactivateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/activate": {
      "put": {
        "summary": "Activate user",
        "description": "Activate a user by ID, marking them as active and allowing login.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user to activate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not Group Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/{id}": {
      "delete": {
        "summary": "Delete user",
        "description": "Soft delete a user by ID, marking them as deleted and preventing access.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID or user already deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/{userId}": {
      "put": {
        "summary": "Update user details",
        "description": "Update selected fields of an existing user, such as basic information, roles, and assignments.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "HealthCheckResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["UP", "DOWN"],
            "description": "Overall system status"
          },
          "dependencies": {
            "type": "object",
            "properties": {
              "database": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["UP", "DOWN"],
                    "description": "Database connection status"
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error details if database is down"
                      }
                    },
                    "description": "Additional details about the database status"
                  }
                },
                "description": "Database dependency status"
              }
            },
            "description": "Status of system dependencies"
          }
        },
        "required": ["status", "dependencies"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        },
        "required": ["email", "password"]
      },
      "USDANewsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/USDANewsItem"
            },
            "description": "Array of USDA news articles"
          },
          "count": {
            "type": "integer",
            "description": "Number of news articles returned",
            "example": 10
          }
        },
        "required": ["success", "data", "count"]
      },
      "USDANewsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the news item",
            "example": "cfd5c30e-17b6-464f-bb6f-aba6ee289a4a"
          },
          "title": {
            "type": "string",
            "description": "Title of the news article",
            "example": "Secretary Rollins Signs State Waivers to Make America Healthy Again"
          },
          "description": {
            "type": "string",
            "description": "Brief description or summary of the news article",
            "example": "U.S. Secretary of Agriculture Brooke L. Rollins, joined by Secretary of Health and Human Services Robert F. Kennedy Jr., signed three new food choice waivers."
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "URL link to the full news article",
            "example": "https://www.fns.usda.gov/newsroom/usda-0129.25"
          },
          "pubDate": {
            "type": "string",
            "format": "date-time",
            "description": "Publication date of the news article",
            "example": "2025-06-11T00:02:11.000Z"
          },
          "guid": {
            "type": "string",
            "description": "Globally unique identifier for the news item",
            "example": "cfd5c30e-17b6-464f-bb6f-aba6ee289a4aEnglish"
          }
        },
        "required": ["title", "description", "link", "pubDate"]
      },
      "PasswordResetRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "code": {
            "type": "string",
            "description": "Password reset code received via email"
          },
          "newPassword": {
            "type": "string",
            "description": "New password meeting complexity requirements",
            "minLength": 8,
            "maxLength": 64,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).*$"
          }
        },
        "required": ["email", "code", "newPassword"]
      },
      "PasswordResetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if password reset was successful"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "message"]
      },
      "PasswordResetCodeRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        },
        "required": ["email"]
      },
      "PasswordResetCodeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if reset code was sent successfully"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "message"]
      },
      "LoginResponse_User_Bids": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Bid ID"
          },
          "number": {
            "type": "string",
            "description": "Bid number"
          }
        },
        "required": ["id", "number"]
      },
      "LoginResponse_User_Role_Permission": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Permission name"
          }
        },
        "required": ["name"]
      },
      "LoginResponse_User_Role_Scope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Scope ID"
          },
          "type": {
            "type": "string",
            "description": "Scope type"
          }
        },
        "required": ["id", "type"]
      },
      "LoginResponse_User_Role": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Role type"
          },
          "scope": {
            "$ref": "#/components/schemas/LoginResponse_User_Role_Scope",
            "description": "Role scope"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginResponse_User_Role_Permission"
            },
            "description": "List of permissions associated with the role"
          }
        },
        "required": ["type", "scope", "permissions"]
      },
      "LoginResponse_User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginResponse_User_Role"
            },
            "description": "List of roles assigned to the user"
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginResponse_User_Bids"
            },
            "description": "List of bids associated with the user"
          }
        },
        "required": ["id", "name", "email", "roles"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT access token"
          },
          "user": {
            "$ref": "#/components/schemas/LoginResponse_User",
            "description": "User details"
          }
        },
        "required": ["token", "user"]
      },
      "EmailVerificationCodeRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        },
        "required": ["email"]
      },
      "EmailVerificationCodeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if verification code was sent successfully"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "message"]
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "code": {
            "type": "string",
            "description": "Verification code received via email"
          }
        },
        "required": ["email", "code"]
      },
      "VerifyEmailResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if email verification was successful"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "message"]
      },
      "CreateSchoolRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the school",
            "minLength": 1
          },
          "enrollment": {
            "type": "integer",
            "description": "Number of students enrolled"
          },
          "schoolType": {
            "type": "string",
            "enum": ["High School", "Middle School", "Elementary School", "Childcare"],
            "description": "Type of school"
          },
          "addressLine1": {
            "type": "string",
            "description": "Primary address line of the school"
          },
          "addressLine2": {
            "type": "string",
            "description": "Secondary address line of the school"
          },
          "city": {
            "type": "string",
            "description": "City where the school is located"
          },
          "state": {
            "type": "string",
            "description": "State where the school is located"
          },
          "zipCode": {
            "type": "string",
            "description": "Postal code of the school"
          },
          "shippingAddressLine1": {
            "type": "string",
            "description": "Primary shipping address line"
          },
          "shippingAddressLine2": {
            "type": "string",
            "description": "Secondary shipping address line"
          },
          "shippingAddressCity": {
            "type": "string",
            "description": "Shipping address city"
          },
          "shippingAddressState": {
            "type": "string",
            "description": "Shipping address state"
          },
          "shippingAddressZipCode": {
            "type": "string",
            "description": "Shipping address postal code"
          },
          "schoolContactName": {
            "type": "string",
            "description": "Primary contact name at the school"
          },
          "schoolContactPhone": {
            "type": "string",
            "description": "Primary contact phone number"
          },
          "schoolContactEmail": {
            "type": "string",
            "format": "email",
            "description": "Primary contact email"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the school"
          },
          "overrideDistrictBilling": {
            "type": "boolean",
            "description": "Whether to override district billing settings"
          },
          "phone": {
            "type": "string",
            "description": "School phone number"
          },
          "fax": {
            "type": "string",
            "description": "School fax number"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "School email address"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "School website URL"
          },
          "contactFirstName": {
            "type": "string",
            "description": "First name of primary contact"
          },
          "contactLastName": {
            "type": "string",
            "description": "Last name of primary contact"
          },
          "contactTitle": {
            "type": "string",
            "description": "Title of primary contact"
          },
          "contactPhone": {
            "type": "string",
            "description": "Phone number of primary contact"
          },
          "contactEmail": {
            "type": "string",
            "format": "email",
            "description": "Email address of primary contact"
          },
          "billingContact": {
            "type": "string",
            "description": "Full name of billing contact"
          },
          "billingPhone": {
            "type": "string",
            "description": "Phone number of billing contact"
          },
          "billingEmail": {
            "type": "string",
            "format": "email",
            "description": "Email address of billing contact"
          },
          "billingAddressLine1": {
            "type": "string",
            "description": "First line of billing address"
          },
          "billingAddressLine2": {
            "type": "string",
            "description": "Second line of billing address"
          },
          "billingCity": {
            "type": "string",
            "description": "City of billing address"
          },
          "billingState": {
            "type": "string",
            "description": "State of billing address"
          },
          "billingZipCode": {
            "type": "string",
            "description": "ZIP code of billing address"
          }
        },
        "required": ["name", "schoolType", "overrideDistrictBilling"]
      },
      "CreateSchoolResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the created school"
          },
          "name": {
            "type": "string",
            "description": "Name of the school"
          },
          "district_id": {
            "type": "integer",
            "description": "ID of the district the school belongs to"
          }
        },
        "required": ["id", "name", "district_id"]
      },
      "UpdateSchoolRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the school",
            "minLength": 1
          },
          "enrollment": {
            "type": "integer",
            "description": "Number of students enrolled"
          },
          "school_type": {
            "type": "string",
            "enum": ["High School", "Middle School", "Elementary School", "Childcare"],
            "description": "Type of school"
          },
          "address_line_1": {
            "type": "string",
            "description": "First line of school address"
          },
          "address_line_2": {
            "type": "string",
            "description": "Second line of school address"
          },
          "city": {
            "type": "string",
            "description": "City where the school is located"
          },
          "state": {
            "type": "string",
            "description": "State where the school is located"
          },
          "zip_code": {
            "type": "string",
            "description": "ZIP code of the school"
          },
          "shipping_address_line_1": {
            "type": "string",
            "description": "First line of shipping address"
          },
          "shipping_address_line_2": {
            "type": "string",
            "description": "Second line of shipping address"
          },
          "shipping_address_city": {
            "type": "string",
            "description": "City of shipping address"
          },
          "shipping_address_state": {
            "type": "string",
            "description": "State of shipping address"
          },
          "shipping_address_zip_code": {
            "type": "string",
            "description": "ZIP code of shipping address"
          },
          "school_contact_name": {
            "type": "string",
            "description": "Name of school contact"
          },
          "school_contact_phone": {
            "type": "string",
            "description": "Phone number of school contact"
          },
          "school_contact_email": {
            "type": "string",
            "format": "email",
            "description": "Email address of school contact"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the school"
          },
          "override_district_billing": {
            "type": "boolean",
            "description": "Whether to override district billing settings"
          },
          "contact_first_name": {
            "type": "string",
            "description": "First name of primary contact"
          },
          "contact_last_name": {
            "type": "string",
            "description": "Last name of primary contact"
          },
          "contact_title": {
            "type": "string",
            "description": "Title of primary contact"
          },
          "contact_phone": {
            "type": "string",
            "description": "Phone number of primary contact"
          },
          "contact_email": {
            "type": "string",
            "format": "email",
            "description": "Email address of primary contact"
          },
          "billing_contact": {
            "type": "string",
            "description": "Full name of billing contact"
          },
          "billing_phone": {
            "type": "string",
            "description": "Phone number of billing contact"
          },
          "billing_email": {
            "type": "string",
            "format": "email",
            "description": "Email address of billing contact"
          },
          "billing_address_line_1": {
            "type": "string",
            "description": "First line of billing address"
          },
          "billing_address_line_2": {
            "type": "string",
            "description": "Second line of billing address"
          },
          "billing_city": {
            "type": "string",
            "description": "City of billing address"
          },
          "billing_state": {
            "type": "string",
            "description": "State of billing address"
          },
          "billing_zip_code": {
            "type": "string",
            "description": "ZIP code of billing address"
          },
          "fax": {
            "type": "string",
            "description": "School fax number"
          },
          "shippingInstructions": {
            "type": "string",
            "description": "Special shipping instructions for the school"
          },
          "shippingDeliveryHours": {
            "type": "string",
            "description": "Preferred delivery hours for shipments to the school"
          }
        },
        "description": "Request body for updating a school. All fields are optional to support partial updates. At least one field must be provided."
      },
      "UpdateSchoolResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the updated school"
          },
          "name": {
            "type": "string",
            "description": "Name of the school"
          },
          "district_id": {
            "type": "integer",
            "description": "ID of the district the school belongs to"
          }
        },
        "required": ["id", "name", "district_id"]
      },
      "SchoolResponseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the school"
          },
          "name": {
            "type": "string",
            "description": "Name of the school"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the school"
          },
          "city": {
            "type": "string",
            "description": "City where the school is located"
          },
          "state": {
            "type": "string",
            "description": "State where the school is located"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal code of the school"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number of the school"
          },
          "enrollment": {
            "type": "integer",
            "description": "Number of students enrolled"
          },
          "district_id": {
            "type": "integer",
            "description": "ID of the district the school belongs to"
          }
        },
        "required": ["id", "name", "district_id"]
      },
      "GetSchoolsDetailedResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SchoolDetailedResponseItem"
        }
      },
      "SchoolDetailedResponseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "School ID"
          },
          "name": {
            "type": "string",
            "description": "School name"
          },
          "enrollment": {
            "type": "integer",
            "nullable": true,
            "description": "Number of students enrolled"
          },
          "shippingAddress": {
            "type": "string",
            "description": "Complete formatted shipping address"
          },
          "primaryContactFirstName": {
            "type": "string",
            "nullable": true,
            "description": "Primary contact first name"
          },
          "primaryContactLastName": {
            "type": "string",
            "nullable": true,
            "description": "Primary contact last name"
          },
          "billingContactFirstName": {
            "type": "string",
            "nullable": true,
            "description": "Billing contact first name"
          },
          "billingContactLastName": {
            "type": "string",
            "nullable": true,
            "description": "Billing contact last name"
          },
          "status": {
            "type": "string",
            "description": "School status"
          }
        },
        "required": ["id", "name", "shippingAddress", "status"]
      },
      "CreateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the task"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the task"
          },
          "assigned_to": {
            "type": "integer",
            "description": "ID of the user assigned to the task"
          },
          "completed": {
            "type": "boolean",
            "description": "Completion status of the task"
          }
        },
        "required": ["title", "assigned_to"]
      },
      "CreateTaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the created task"
          },
          "title": {
            "type": "string",
            "description": "Title of the task"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the task"
          },
          "assigned_to": {
            "type": "integer",
            "description": "ID of the user assigned to the task"
          },
          "completed": {
            "type": "boolean",
            "description": "Completion status of the task"
          }
        },
        "required": ["id", "title", "assigned_to"]
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the task"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the task"
          },
          "assigned_to": {
            "type": "integer",
            "description": "ID of the user assigned to the task"
          },
          "completed": {
            "type": "boolean",
            "description": "Completion status of the task"
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the task"
          },
          "title": {
            "type": "string",
            "description": "Title of the task"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the task"
          },
          "assigned_to": {
            "type": "integer",
            "description": "ID of the user assigned to the task"
          },
          "completed": {
            "type": "boolean",
            "description": "Completion status of the task"
          }
        },
        "required": ["id", "title", "assigned_to"]
      },
      "ListUsersResponseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the user"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "description": "User's platform role assignments"
          },
          "bidRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidRoleAssignment"
            },
            "description": "User's bid-specific role assignments"
          },
          "managedBids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of bid IDs that the user manages"
          },
          "status": {
            "type": "string",
            "description": "User's current status"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "User's last login timestamp in ISO format"
          },
          "demoAccount": {
            "type": "boolean",
            "description": "Whether this is a demo account"
          }
        },
        "required": ["id", "firstName", "lastName", "email", "roles", "bidRoles", "managedBids", "status", "lastLogin", "demoAccount"]
      },
      "RoleAssignment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Role type name"
          },
          "scope": {
            "$ref": "#/components/schemas/RoleScope"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of permission names"
          }
        },
        "required": ["type", "scope", "permissions"]
      },
      "BidRoleAssignment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Bid role type name"
          },
          "scope": {
            "$ref": "#/components/schemas/RoleScope"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of permission names"
          }
        },
        "required": ["type", "scope", "permissions"]
      },
      "RoleScope": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Scope type (e.g., 'coop', 'district', 'school')"
          },
          "id": {
            "type": "string",
            "description": "Scope identifier"
          },
          "name": {
            "type": "string",
            "description": "Optional scope name for display"
          }
        },
        "required": ["type", "id"]
      },
      "ListCategoriesResponseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the category"
          },
          "external_id": {
            "type": "string",
            "description": "External identifier of the category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "description": {
            "type": "string",
            "description": "Description of the category"
          }
        },
        "required": ["id", "external_id", "name"]
      },
      "DashboardMetricsResponse": {
        "type": "object",
        "properties": {
          "active_bids": {
            "type": "integer",
            "description": "Number of active bids"
          },
          "pending_approvals": {
            "type": "integer",
            "description": "Number of pending vendor approvals"
          },
          "active_vendors": {
            "type": "integer",
            "description": "Number of active vendors (for district users)"
          },
          "member_districts": {
            "type": "integer",
            "description": "Number of member districts (for cooperative users)"
          },
          "active_bids_change": {
            "type": "string",
            "description": "Historical change in active bids (e.g., '+2 from last month', 'No change from last month')"
          },
          "pending_approvals_change": {
            "type": "string",
            "description": "Historical change in pending approvals (e.g., '-1 from last week', 'No change from last week')"
          },
          "vendors_or_districts_change": {
            "type": "string",
            "description": "Historical change in vendors or districts (e.g., '+4 new this month', 'No new vendors this month')"
          }
        },
        "required": ["active_bids", "pending_approvals", "active_bids_change", "pending_approvals_change", "vendors_or_districts_change"]
      },
      "CreateDistrictRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the district",
            "minLength": 1
          },
          "location": {
            "type": "string",
            "description": "General location of the district"
          },
          "directorName": {
            "type": "string",
            "description": "Name of the district director"
          },
          "addressLine1": {
            "type": "string",
            "description": "First line of the district's address"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second line of the district's address"
          },
          "city": {
            "type": "string",
            "description": "City where the district is located"
          },
          "state": {
            "type": "string",
            "description": "State where the district is located"
          },
          "zipCode": {
            "type": "string",
            "description": "Postal code of the district"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number of the district"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Contact email of the district"
          },
          "fax": {
            "type": "string",
            "description": "Fax number of the district"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "Website URL of the district"
          },
          "enrollment": {
            "type": "integer",
            "format": "int32",
            "description": "Number of students enrolled in the district",
            "minimum": 0
          },
          "raNumber": {
            "type": "string",
            "description": "RA number of the district"
          },
          "contact2": {
            "type": "string",
            "description": "Name of the secondary contact"
          },
          "contact2Phone": {
            "type": "string",
            "description": "Phone number of the secondary contact"
          },
          "contact2Email": {
            "type": "string",
            "format": "email",
            "description": "Email of the secondary contact"
          },
          "billingContact": {
            "type": "string",
            "description": "Name of the billing contact"
          },
          "billingAddressLine1": {
            "type": "string",
            "description": "First line of the billing address"
          },
          "billingAddressLine2": {
            "type": "string",
            "description": "Second line of the billing address"
          },
          "billingCity": {
            "type": "string",
            "description": "City of the billing address"
          },
          "billingState": {
            "type": "string",
            "description": "State of the billing address"
          },
          "billingZipCode": {
            "type": "string",
            "description": "Postal code of the billing address"
          },
          "billingPhone": {
            "type": "string",
            "description": "Phone number for billing contact"
          },
          "billingEmail": {
            "type": "string",
            "format": "email",
            "description": "Email for billing contact"
          },
          "superintendent": {
            "type": "string",
            "description": "Name of the superintendent"
          },
          "established": {
            "type": "string",
            "description": "Year the district was established"
          },
          "status": {
            "type": "string",
            "description": "Status of the district"
          },
          "budget": {
            "type": "string",
            "description": "Budget information for the district"
          },
          "schools": {
            "type": "integer",
            "format": "int32",
            "description": "Number of schools in the district",
            "minimum": 0
          },
          "students": {
            "type": "integer",
            "format": "int32",
            "description": "Number of students in the district",
            "minimum": 0
          },
          "participatingIn": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Program or initiative the district is participating in"
            },
            "description": "List of programs or initiatives the district is participating in"
          },
          "address": {
            "type": "string",
            "description": "Full address of the district"
          },
          "billingAddress": {
            "type": "string",
            "description": "Full billing address of the district"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Product ID associated with the district"
            },
            "description": "List of product IDs associated with the district"
          }
        },
        "required": ["name"]
      },
      "CreateDistrictResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the created district"
          },
          "name": {
            "type": "string",
            "description": "Name of the district"
          }
        },
        "required": ["id", "name"]
      },
      "UpdateDistrictRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the district"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the district"
          },
          "city": {
            "type": "string",
            "description": "City where the district is located"
          },
          "state": {
            "type": "string",
            "description": "State where the district is located"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal code of the district"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number of the district"
          },
          "enrollment": {
            "type": "integer",
            "description": "Number of students enrolled in the district"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Product name associated with the district"
            },
            "description": "List of products associated with the district"
          }
        }
      },
      "UpdateDistrictResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the updated district"
          },
          "name": {
            "type": "string",
            "description": "Name of the district"
          }
        },
        "required": ["id", "name"]
      },
      "GetDistrictListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the district"
          },
          "name": {
            "type": "string",
            "description": "Name of the district"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the district"
          },
          "city": {
            "type": "string",
            "description": "City where the district is located"
          },
          "state": {
            "type": "string",
            "description": "State where the district is located"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal code of the district"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number of the district"
          },
          "enrollment": {
            "type": "integer",
            "description": "Number of students enrolled in the district"
          }
        },
        "required": ["id", "name"]
      },
      "GetDistrictDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the district"
          },
          "cooperative_id": {
            "type": "integer",
            "description": "Unique identifier of the cooperative this district belongs to"
          },
          "name": {
            "type": "string",
            "description": "Name of the district"
          },
          "location": {
            "type": "string",
            "nullable": true,
            "description": "Location of the district"
          },
          "director_name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the district director"
          },
          "address": {
            "type": "object",
            "properties": {
              "street_address_1": {
                "type": "string",
                "nullable": true,
                "description": "Primary street address"
              },
              "street_address_2": {
                "type": "string",
                "nullable": true,
                "description": "Secondary street address"
              },
              "city": {
                "type": "string",
                "nullable": true,
                "description": "City"
              },
              "state": {
                "type": "string",
                "nullable": true,
                "description": "State"
              },
              "zip_code": {
                "type": "string",
                "nullable": true,
                "description": "ZIP code"
              }
            },
            "nullable": true,
            "description": "Physical address of the district"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Contact phone number of the district"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Contact email of the district"
          },
          "fax": {
            "type": "string",
            "nullable": true,
            "description": "Fax number of the district"
          },
          "website": {
            "type": "string",
            "nullable": true,
            "description": "Website URL of the district"
          },
          "district_enrollment": {
            "type": "integer",
            "nullable": true,
            "description": "Total enrollment in the district"
          },
          "ra_number": {
            "type": "string",
            "nullable": true,
            "description": "RA number of the district"
          },
          "number_of_schools": {
            "type": "integer",
            "nullable": true,
            "description": "Number of schools in the district"
          },
          "number_of_students": {
            "type": "integer",
            "nullable": true,
            "description": "Number of students in the district"
          },
          "annual_budget": {
            "type": "number",
            "nullable": true,
            "description": "Annual budget of the district"
          },
          "superintendent_name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the superintendent"
          },
          "established_year": {
            "type": "integer",
            "nullable": true,
            "description": "Year the district was established"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "District code"
          },
          "participating_in": {
            "type": "string",
            "nullable": true,
            "description": "Programs the district is participating in"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the district"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Additional notes about the district"
          },
          "secondary_contact_name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the secondary contact"
          },
          "secondary_contact_phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of the secondary contact"
          },
          "secondary_contact_email": {
            "type": "string",
            "nullable": true,
            "description": "Email of the secondary contact"
          },
          "billing_address": {
            "type": "object",
            "properties": {
              "street_address_1": {
                "type": "string",
                "nullable": true,
                "description": "Primary street address"
              },
              "street_address_2": {
                "type": "string",
                "nullable": true,
                "description": "Secondary street address"
              },
              "city": {
                "type": "string",
                "nullable": true,
                "description": "City"
              },
              "state": {
                "type": "string",
                "nullable": true,
                "description": "State"
              },
              "zip_code": {
                "type": "string",
                "nullable": true,
                "description": "ZIP code"
              }
            },
            "nullable": true,
            "description": "Billing address of the district"
          },
          "billing_contact_phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of the billing contact"
          },
          "billing_contact_email": {
            "type": "string",
            "nullable": true,
            "description": "Email of the billing contact"
          },
          "shipping_address": {
            "type": "string",
            "nullable": true,
            "description": "Shipping address of the district"
          },
          "contact_first_name": {
            "type": "string",
            "nullable": true,
            "description": "First name of the primary contact"
          },
          "contact_last_name": {
            "type": "string",
            "nullable": true,
            "description": "Last name of the primary contact"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Current status of the district"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time when the district was created"
          },
          "is_deleted": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the district is deleted"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Product name associated with the district"
            },
            "nullable": true,
            "description": "List of products associated with the district"
          },
          "schools": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier of the school"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the school"
                },
                "enrollment": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Number of students enrolled in the school"
                },
                "school_type": {
                  "type": "string",
                  "nullable": true,
                  "description": "Type of the school"
                },
                "shipping_address": {
                  "type": "string",
                  "nullable": true,
                  "description": "Shipping address of the school"
                },
                "contact_first_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "First name of the school contact"
                },
                "contact_last_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Last name of the school contact"
                },
                "status": {
                  "type": "string",
                  "nullable": true,
                  "description": "Current status of the school"
                }
              },
              "required": ["id", "name"]
            },
            "nullable": true,
            "description": "List of schools in the district"
          }
        },
        "required": ["id", "name"]
      },
      "DeactivateDistrictResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the deactivated district"
          },
          "name": {
            "type": "string",
            "description": "Name of the district"
          },
          "status": {
            "type": "string",
            "description": "Status of the district (e.g., 'inactive')"
          }
        },
        "required": ["id", "name", "status"]
      },
      "ActivateDistrictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message confirming district activation"
          }
        },
        "required": ["message"]
      },
      "DeactivateUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message confirming user deactivation"
          }
        },
        "required": ["message"]
      },
      "ActivateUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message confirming user activation"
          }
        },
        "required": ["message"]
      },
      "DeleteUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["message"]
      },
      "UpdateOrganizationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the organization"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the organization"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number of the organization"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Contact email of the organization"
          }
        }
      },
      "CreateBidRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the bid"
          },
          "note": {
            "type": "string",
            "description": "Optional note for the bid"
          },
          "bidYear": {
            "type": "string",
            "description": "Year of the bid"
          },
          "categoryId": {
            "type": "integer",
            "description": "ID of the category the bid belongs to"
          },
          "status": {
            "type": "string",
            "enum": ["In Process", "Released", "Opened", "Awarded", "Canceled", "Archived"],
            "description": "Status of the bid"
          },
          "awardType": {
            "type": "string",
            "description": "Type of award for the bid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the bid"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the bid"
          },
          "anticipatedOpeningDate": {
            "type": "string",
            "format": "date-time",
            "description": "Anticipated opening date of the bid"
          },
          "awardDate": {
            "type": "string",
            "format": "date-time",
            "description": "Award date of the bid"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user managing the bid"
          },
          "description": {
            "type": "string",
            "description": "Description of the bid"
          },
          "estimatedValue": {
            "type": "string",
            "description": "Estimated value of the bid"
          },
          "cooperativeId": {
            "type": "integer",
            "description": "ID of the cooperative associated with the bid"
          },
          "districtId": {
            "type": "integer",
            "description": "ID of the district associated with the bid"
          }
        },
        "required": [
          "name",
          "bidYear",
          "status"
        ]
      },
      "CreateBidResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the created bid"
          },
          "code": {
            "type": "string",
            "description": "Generated bid code",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the bid",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Optional note for the bid",
            "nullable": true
          },
          "bidYear": {
            "type": "string",
            "description": "Year of the bid",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "description": "ID of the category the bid belongs to",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the bid",
            "nullable": true
          },
          "awardType": {
            "type": "string",
            "description": "Type of award for the bid",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the bid",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the bid",
            "nullable": true
          },
          "anticipatedOpeningDate": {
            "type": "string",
            "format": "date-time",
            "description": "Anticipated opening date of the bid",
            "nullable": true
          },
          "awardDate": {
            "type": "string",
            "format": "date-time",
            "description": "Award date of the bid",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user managing the bid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the bid",
            "nullable": true
          },
          "estimatedValue": {
            "type": "string",
            "description": "Estimated value of the bid",
            "nullable": true
          },
          "cooperativeId": {
            "type": "integer",
            "description": "ID of the cooperative associated with the bid",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "description": "ID of the district associated with the bid",
            "nullable": true
          },
          "schoolId": {
            "type": "integer",
            "description": "ID of the school associated with the bid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the bid is deleted"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp of the bid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp of the bid",
            "nullable": true
          }
        },
        "required": ["id", "name", "status", "isDeleted", "createdAt"]
      },
      "UpdateBidRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the bid"
          },
          "category_id": {
            "type": "integer",
            "description": "ID of the category the bid belongs to"
          },
          "organization_id": {
            "type": "integer",
            "description": "ID of the organization associated with the bid"
          },
          "bid_manager_id": {
            "type": "integer",
            "description": "ID of the user managing the bid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the bid"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the bid"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "active", "closed"],
            "description": "Status of the bid"
          }
        }
      },
      "BidResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the bid"
          },
          "title": {
            "type": "string",
            "description": "Title of the bid"
          },
          "number": {
            "type": "string",
            "description": "Bid number"
          },
          "category_id": {
            "type": "integer",
            "description": "ID of the category the bid belongs to"
          },
          "organization_id": {
            "type": "integer",
            "description": "ID of the organization associated with the bid"
          },
          "bid_manager_id": {
            "type": "integer",
            "description": "ID of the user managing the bid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the bid"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the bid"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "active", "closed"],
            "description": "Status of the bid"
          }
        },
        "required": [
          "id",
          "title",
          "number",
          "category_id",
          "organization_id",
          "bid_manager_id",
          "start_date",
          "end_date",
          "status"
        ]
      },
      "BidListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the bid"
          },
          "title": {
            "type": "string",
            "description": "Title of the bid"
          },
          "number": {
            "type": "string",
            "description": "Bid number"
          },
          "category": {
            "type": "string",
            "description": "Name of the category the bid belongs to"
          },
          "organization": {
            "type": "string",
            "description": "Name of the organization associated with the bid"
          },
          "bid_manager": {
            "type": "string",
            "description": "Name of the user managing the bid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the bid"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the bid"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "active", "closed"],
            "description": "Status of the bid"
          }
        },
        "required": [
          "id",
          "title",
          "number",
          "category",
          "organization",
          "bid_manager",
          "start_date",
          "end_date",
          "status"
        ]
      },
      "PaginatedBidsResponse": {
        "type": "object",
        "properties": {
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidListItem"
            },
            "description": "Array of bid items for the current page"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of bids matching the filter criteria"
              },
              "page": {
                "type": "integer",
                "description": "Current page number"
              },
              "limit": {
                "type": "integer",
                "description": "Number of items per page"
              },
              "totalPages": {
                "type": "integer",
                "description": "Total number of pages available"
              }
            },
            "required": ["total", "page", "limit", "totalPages"],
            "description": "Pagination metadata"
          }
        },
        "required": ["bids", "pagination"]
      },
      "CreateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "description": {
            "type": "string",
            "description": "Description of the category"
          }
        },
        "required": ["name"]
      },
      "CreateCategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the created category"
          },
          "external_id": {
            "type": "string",
            "description": "External identifier of the created category"
          },
          "name": {
            "type": "string",
            "description": "Name of the created category"
          },
          "description": {
            "type": "string",
            "description": "Description of the created category"
          }
        },
        "required": ["id", "external_id", "name"]
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "description": {
            "type": "string",
            "description": "Description of the category"
          }
        },
        "required": ["name"]
      },
      "UpdateCategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the updated category"
          },
          "external_id": {
            "type": "string",
            "description": "External identifier of the updated category"
          },
          "name": {
            "type": "string",
            "description": "Name of the updated category"
          },
          "description": {
            "type": "string",
            "description": "Description of the updated category"
          }
        },
        "required": ["id", "external_id", "name"]
      },
      "BidDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the bid"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Bid code"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the bid"
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Additional notes about the bid"
          },
          "bidYear": {
            "type": "string",
            "nullable": true,
            "description": "Year of the bid"
          },
          "categoryId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the category the bid belongs to"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Current status of the bid"
          },
          "awardType": {
            "type": "string",
            "nullable": true,
            "description": "Type of award for the bid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Start date of the bid"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "End date of the bid"
          },
          "anticipatedOpeningDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Anticipated opening date of the bid"
          },
          "awardDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date when the bid was awarded"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date when the bid was released, computed based on bid status and available dates"
          },
          "userId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the user associated with the bid"
          },
          "bidManagerId": {
            "type": "string",
            "nullable": true,
            "description": "ID of the bid manager, derived from userId"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the bid"
          },
          "estimatedValue": {
            "type": "string",
            "nullable": true,
            "description": "Estimated value of the bid"
          },
          "cooperativeId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the cooperative associated with the bid"
          },
          "districtId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the district associated with the bid"
          },
          "schoolId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the school associated with the bid"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the bid is deleted"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the bid was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the bid was last updated"
          },
          "approvals": {
            "type": "object",
            "properties": {
              "termsAndConditions": {
                "type": "string",
                "description": "Approval status for terms and conditions"
              },
              "requiredForms": {
                "type": "string",
                "description": "Approval status for required forms"
              },
              "bidItems": {
                "type": "string",
                "description": "Approval status for bid items"
              },
              "participatingDistricts": {
                "type": "string",
                "description": "Approval status for participating districts"
              }
            },
            "required": ["termsAndConditions", "requiredForms", "bidItems", "participatingDistricts"],
            "description": "Approval statuses for different aspects of the bid"
          }
        },
        "required": ["id", "approvals"]
      },
      "BidItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the bid item"
          },
          "itemName": {
            "type": "string",
            "description": "Name of the bid item"
          },
          "acceptableBrands": {
            "type": "string",
            "description": "Acceptable brands for the bid item"
          },
          "bidId": {
            "type": "integer",
            "description": "ID of the associated bid"
          },
          "bidName": {
            "type": "string",
            "description": "Name of the associated bid"
          },
          "awardGroup": {
            "type": "string",
            "description": "Award group classification"
          },
          "status": {
            "type": "string",
            "description": "Current status of the bid item"
          },
          "projection": {
            "type": "number",
            "description": "Projected quantity for the bid item"
          },
          "projectionUnit": {
            "type": "string",
            "description": "Unit of measurement for the projection"
          },
          "diversion": {
            "type": "string",
            "description": "Diversion information for the bid item"
          },
          "minProjection": {
            "type": "number",
            "description": "Minimum projected quantity"
          },
          "totalBidUnits": {
            "type": "number",
            "description": "Total number of bid units"
          },
          "bidUnit": {
            "type": "string",
            "description": "Unit of measurement for bidding"
          },
          "bidUnitProjUnit": {
            "type": "number",
            "description": "Bid unit projection unit value"
          },
          "percentDistrictsUsing": {
            "type": "number",
            "description": "Percentage of districts using this item"
          }
        },
        "required": ["id", "itemName", "acceptableBrands"]
      },
      "CreateBidItemRequest": {
        "type": "object",
        "properties": {
          "bidId": {
            "type": "integer",
            "minimum": 1,
            "description": "ID of the bid this item belongs to"
          },
          "itemName": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the bid item"
          },
          "awardGroup": {
            "type": "string",
            "description": "Award group classification"
          },
          "projectionUnit": {
            "type": "string",
            "minLength": 1,
            "description": "Unit of measurement for the projection"
          },
          "bidUnit": {
            "type": "string",
            "minLength": 1,
            "description": "Unit of measurement for bidding"
          },
          "bidUnitProjUnit": {
            "type": "number",
            "minimum": 0,
            "description": "Bid unit projection unit value"
          },
          "minProjection": {
            "type": "number",
            "minimum": 0,
            "description": "Minimum projected quantity"
          },
          "status": {
            "type": "string",
            "description": "Status of the bid item"
          },
          "diversion": {
            "type": "string",
            "description": "Diversion information"
          },
          "acceptableBrands": {
            "type": "string",
            "description": "Acceptable brands for the bid item"
          },
          "bidSpecification": {
            "type": "string",
            "description": "Bid specification details"
          },
          "projection": {
            "type": "number",
            "description": "Projected quantity"
          },
          "totalBidUnits": {
            "type": "number",
            "description": "Total number of bid units"
          },
          "percentDistrictsUsing": {
            "type": "number",
            "description": "Percentage of districts using this item"
          }
        },
        "required": ["bidId", "itemName", "projectionUnit", "bidUnit", "bidUnitProjUnit"]
      },
            "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "role": {
            "type": "string",
            "enum": ["Super-Admin", "Group Admin", "District Admin", "School Admin", "Viewer"],
            "description": "User's role"
          },
          "bidRole": {
            "type": "string",
            "enum": ["Bid Administrator", "Bid Viewer"],
            "description": "User's bid-related role"
          },
          "districtId": {
            "type": "integer",
            "description": "ID of the district to associate with the user"
          },
          "schoolId": {
            "type": "integer",
            "description": "ID of the school to associate with the user"
          },
          "managedBids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of bid IDs managed by the user"
          }
        }
      },

      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["message", "user"]
      },

      "UpdateBidItemRequest": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string",
            "description": "Name of the bid item",
            "minLength": 1
          },
          "awardGroup": {
            "type": "string",
            "description": "Award group classification"
          },
          "projectionUnit": {
            "type": "string",
            "description": "Unit of measurement for projections",
            "minLength": 1
          },
          "bidUnit": {
            "type": "string",
            "description": "Unit of measurement for bidding",
            "minLength": 1
          },
          "bidUnitProjUnit": {
            "type": "number",
            "description": "Conversion factor between bid unit and projection unit",
            "minimum": 0
          },
          "minProjection": {
            "type": "number",
            "description": "Minimum projection value",
            "minimum": 0
          },
          "status": {
            "type": "string",
            "description": "Current status of the bid item"
          },
          "diversion": {
            "type": "string",
            "description": "Diversion information"
          },
          "acceptableBrands": {
            "type": "string",
            "description": "List of acceptable brands"
          },
          "projection": {
            "type": "number",
            "description": "Projected quantity"
          },
          "totalBidUnits": {
            "type": "number",
            "description": "Total number of bid units"
          },
          "percentDistrictsUsing": {
            "type": "number",
            "description": "Percentage of districts using this item"
          }
        },
        "description": "Request body for updating a bid item. All fields are optional to support partial updates."
      },
      "GetSchoolByIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the school"
          },
          "districtId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the district this school belongs to"
          },
          "name": {
            "type": "string",
            "description": "Name of the school"
          },
          "enrollment": {
            "type": "integer",
            "nullable": true,
            "description": "Number of students enrolled"
          },
          "schoolType": {
            "type": "string",
            "description": "Type of school (e.g., Elementary, Middle, High)"
          },
          "addressLine1": {
            "type": "string",
            "nullable": true,
            "description": "First line of the school address"
          },
          "addressLine2": {
            "type": "string",
            "nullable": true,
            "description": "Second line of the school address"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "City where the school is located"
          },
          "state": {
            "type": "string",
            "nullable": true,
            "description": "State where the school is located"
          },
          "zipCode": {
            "type": "string",
            "nullable": true,
            "description": "ZIP code of the school"
          },
          "shippingAddressLine1": {
            "type": "string",
            "nullable": true,
            "description": "First line of the shipping address"
          },
          "shippingAddressLine2": {
            "type": "string",
            "nullable": true,
            "description": "Second line of the shipping address"
          },
          "shippingAddressCity": {
            "type": "string",
            "nullable": true,
            "description": "City for shipping address"
          },
          "shippingAddressState": {
            "type": "string",
            "nullable": true,
            "description": "State for shipping address"
          },
          "shippingAddressZipCode": {
            "type": "string",
            "nullable": true,
            "description": "ZIP code for shipping address"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Additional notes about the school"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "School phone number"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "School email address"
          },
          "overrideDistrictBilling": {
            "type": "boolean",
            "description": "Whether this school overrides district billing settings"
          },
          "status": {
            "type": "string",
            "description": "Current status of the school"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the school record was created"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "School code identifier"
          },
          "location": {
            "type": "string",
            "nullable": true,
            "description": "Location description"
          },
          "directorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the school director"
          },
          "website": {
            "type": "string",
            "nullable": true,
            "description": "School website URL"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the school"
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "description": "URL to school logo"
          },
          "fullAddress": {
            "type": "string",
            "description": "Complete formatted address"
          },
          "shippingFullAddress": {
            "type": "string",
            "description": "Complete formatted shipping address"
          }
        },
        "required": ["id", "districtId", "name", "schoolType", "overrideDistrictBilling", "status", "createdAt", "fullAddress", "shippingFullAddress"]
      },
      "GetSchoolDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the school"
          },
          "districtId": {
            "type": "integer", 
            "description": "ID of the district the school belongs to"
          },
          "districtName": {
            "type": "string",
            "description": "Name of the district"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the school"
          },
          "enrollment": {
            "type": "integer",
            "nullable": true,
            "description": "Number of students enrolled"
          },
          "schoolType": {
            "type": "string",
            "nullable": true,
            "description": "Type of school (High School, Middle School, Elementary School, Childcare)"
          },
          "addressLine1": {
            "type": "string",
            "nullable": true,
            "description": "First line of school address"
          },
          "addressLine2": {
            "type": "string", 
            "nullable": true,
            "description": "Second line of school address"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "City of school address"
          },
          "state": {
            "type": "string",
            "nullable": true,
            "description": "State of school address"
          },
          "zipCode": {
            "type": "string",
            "nullable": true,
            "description": "ZIP code of school address"
          },
          "shippingAddressLine1": {
            "type": "string",
            "nullable": true,
            "description": "First line of shipping address"
          },
          "shippingAddressLine2": {
            "type": "string",
            "nullable": true,
            "description": "Second line of shipping address"
          },
          "shippingAddressCity": {
            "type": "string",
            "nullable": true,
            "description": "City of shipping address"
          },
          "shippingAddressState": {
            "type": "string",
            "nullable": true,
            "description": "State of shipping address"
          },
          "shippingAddressZipCode": {
            "type": "string",
            "nullable": true,
            "description": "ZIP code of shipping address"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Additional notes about the school"
          },
          "contactFirstName": {
            "type": "string",
            "nullable": true,
            "description": "First name of primary contact"
          },
          "contactLastName": {
            "type": "string",
            "nullable": true,
            "description": "Last name of primary contact"
          },
          "contactTitle": {
            "type": "string",
            "nullable": true,
            "description": "Title of primary contact"
          },
          "contactPhone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of primary contact"
          },
          "contactEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email address of primary contact"
          },
          "billingContact": {
            "type": "string",
            "nullable": true,
            "description": "Full name of billing contact"
          },
          "billingPhone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of billing contact"
          },
          "billingEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email address of billing contact"
          },
          "billingAddressLine1": {
            "type": "string",
            "nullable": true,
            "description": "First line of billing address"
          },
          "billingAddressLine2": {
            "type": "string",
            "nullable": true,
            "description": "Second line of billing address"
          },
          "billingCity": {
            "type": "string",
            "nullable": true,
            "description": "City of billing address"
          },
          "billingState": {
            "type": "string",
            "nullable": true,
            "description": "State of billing address"
          },
          "billingZipCode": {
            "type": "string",
            "nullable": true,
            "description": "ZIP code of billing address"
          },
          "fax": {
            "type": "string",
            "nullable": true,
            "description": "School fax number"
          },
          "shippingInstructions": {
            "type": "string",
            "nullable": true,
            "description": "Special shipping instructions for the school"
          },
          "shippingDeliveryHours": {
            "type": "string",
            "nullable": true,
            "description": "Preferred delivery hours for shipments to the school"
          }
        },
        "required": ["id", "districtId", "districtName"]
      }
    }
  }
}
